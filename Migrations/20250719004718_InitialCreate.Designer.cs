// <auto-generated />
using System;
using FastFoodApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FastFoodApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250719004718_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapThanhVien", b =>
                {
                    b.Property<int>("MaCapThanhVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCapThanhVien"));

                    b.Property<int>("NguongDiem")
                        .HasColumnType("int");

                    b.Property<double>("PhanTramGiamGia")
                        .HasColumnType("float");

                    b.Property<string>("TenCap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaCapThanhVien");

                    b.ToTable("CapThanhViens");

                    b.HasData(
                        new
                        {
                            MaCapThanhVien = 1,
                            NguongDiem = 0,
                            PhanTramGiamGia = 0.0,
                            TenCap = "Đồng"
                        },
                        new
                        {
                            MaCapThanhVien = 2,
                            NguongDiem = 1000,
                            PhanTramGiamGia = 5.0,
                            TenCap = "Bạc"
                        },
                        new
                        {
                            MaCapThanhVien = 3,
                            NguongDiem = 5000,
                            PhanTramGiamGia = 10.0,
                            TenCap = "Vàng"
                        });
                });

            modelBuilder.Entity("ChiTietCombo", b =>
                {
                    b.Property<int>("MaCombo")
                        .HasColumnType("int");

                    b.Property<int>("MaMonAn")
                        .HasColumnType("int");

                    b.HasKey("MaCombo", "MaMonAn");

                    b.HasIndex("MaMonAn");

                    b.ToTable("ChiTietCombos");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.Property<int>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiTiet"));

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaCombo")
                        .HasColumnType("int");

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<int?>("MaMonAn")
                        .HasColumnType("int");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaChiTiet");

                    b.HasIndex("MaCombo");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaMonAn");

                    b.ToTable("ChiTietHoaDons");
                });

            modelBuilder.Entity("Combo", b =>
                {
                    b.Property<int>("MaCombo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaCombo"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCombo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MaCombo");

                    b.ToTable("Combos");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<string>("DiaChiGiaoHang")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaNguoiDung")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaNguoiDung");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("LoaiMonAn", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiMonAns");

                    b.HasData(
                        new
                        {
                            MaLoai = 1,
                            TenLoai = "Gà Rán"
                        },
                        new
                        {
                            MaLoai = 2,
                            TenLoai = "Pizza"
                        },
                        new
                        {
                            MaLoai = 3,
                            TenLoai = "Burger"
                        },
                        new
                        {
                            MaLoai = 4,
                            TenLoai = "Nước Uống"
                        });
                });

            modelBuilder.Entity("MonAn", b =>
                {
                    b.Property<int>("MaMonAn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaMonAn"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<byte[]>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonAn")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("MaMonAn");

                    b.HasIndex("MaLoai");

                    b.ToTable("MonAns");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DiemTichLuy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaCapThanhVien")
                        .HasColumnType("int");

                    b.Property<int>("MaVaiTro")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNguoiDung");

                    b.HasIndex("MaCapThanhVien");

                    b.HasIndex("MaVaiTro");

                    b.ToTable("NguoiDungs");

                    b.HasData(
                        new
                        {
                            MaNguoiDung = 1,
                            DiaChi = "123 Admin Street",
                            DiemTichLuy = 0,
                            Email = "admin@example.com",
                            HoTen = "Admin",
                            MaCapThanhVien = 1,
                            MaVaiTro = 1,
                            MatKhau = "$2a$11$...",
                            NgaySinh = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SoDienThoai = "0123456789"
                        });
                });

            modelBuilder.Entity("VaiTro", b =>
                {
                    b.Property<int>("MaVaiTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVaiTro"));

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaVaiTro");

                    b.ToTable("VaiTros");

                    b.HasData(
                        new
                        {
                            MaVaiTro = 1,
                            TenVaiTro = "Admin"
                        },
                        new
                        {
                            MaVaiTro = 2,
                            TenVaiTro = "Customer"
                        });
                });

            modelBuilder.Entity("ChiTietCombo", b =>
                {
                    b.HasOne("Combo", "Combo")
                        .WithMany("ChiTietCombos")
                        .HasForeignKey("MaCombo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonAn", "MonAn")
                        .WithMany()
                        .HasForeignKey("MaMonAn")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("ChiTietHoaDon", b =>
                {
                    b.HasOne("Combo", "Combo")
                        .WithMany()
                        .HasForeignKey("MaCombo");

                    b.HasOne("HoaDon", "HoaDon")
                        .WithMany()
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MonAn", "MonAn")
                        .WithMany()
                        .HasForeignKey("MaMonAn");

                    b.Navigation("Combo");

                    b.Navigation("HoaDon");

                    b.Navigation("MonAn");
                });

            modelBuilder.Entity("HoaDon", b =>
                {
                    b.HasOne("NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("MaNguoiDung")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("MonAn", b =>
                {
                    b.HasOne("LoaiMonAn", "LoaiMonAn")
                        .WithMany()
                        .HasForeignKey("MaLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiMonAn");
                });

            modelBuilder.Entity("NguoiDung", b =>
                {
                    b.HasOne("CapThanhVien", "CapThanhVien")
                        .WithMany()
                        .HasForeignKey("MaCapThanhVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VaiTro", "VaiTro")
                        .WithMany()
                        .HasForeignKey("MaVaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CapThanhVien");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("Combo", b =>
                {
                    b.Navigation("ChiTietCombos");
                });
#pragma warning restore 612, 618
        }
    }
}
