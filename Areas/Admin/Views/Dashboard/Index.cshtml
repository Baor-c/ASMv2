@model FastFoodApp.Areas.Admin.Models.DashboardViewModel
@{
    ViewData["Title"] = "Tổng quan & Báo cáo";
    string FormatPrice(decimal price) => price.ToString("N0") + "đ";
}

<!-- THÊM MỚI: Form lọc theo ngày tháng -->
<div class="bg-white p-4 rounded-lg shadow-sm mb-8">
    <form asp-action="Index" method="get" class="flex flex-wrap items-end gap-4">
        <div>
            <label for="startDate" class="text-sm font-medium text-gray-700">Từ ngày:</label>
            <input type="date" name="startDate" id="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" class="mt-1 border-gray-300 rounded-md shadow-sm focus:border-red-500 focus:ring-red-500">
        </div>
        <div>
            <label for="endDate" class="text-sm font-medium text-gray-700">Đến ngày:</label>
            <input type="date" name="endDate" id="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" class="mt-1 border-gray-300 rounded-md shadow-sm focus:border-red-500 focus:ring-red-500">
        </div>
        <button type="submit" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">Lọc</button>
        <a asp-action="Index" class="border border-gray-300 px-4 py-2 rounded-lg hover:bg-gray-50">Reset</a>
    </form>
</div>


<!-- CẬP NHẬT: Các thẻ thống kê giờ là các liên kết -->
<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
    <div class="bg-white p-6 rounded-lg shadow-sm">
        <p class="text-sm text-gray-600">Doanh thu (@Model.StartDate.ToString("dd/MM") - @Model.EndDate.ToString("dd/MM"))</p>
        <p class="text-2xl font-bold text-gray-900">@FormatPrice(Model.TotalRevenue)</p>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-sm">
        <p class="text-sm text-gray-600">Đơn hàng (@Model.StartDate.ToString("dd/MM") - @Model.EndDate.ToString("dd/MM"))</p>
        <p class="text-2xl font-bold text-gray-900">@Model.TotalOrders</p>
    </div>
    <a asp-controller="Orders" asp-action="Index" asp-route-statusFilter="today" class="bg-white p-6 rounded-lg shadow-sm block hover:bg-gray-50 transition-colors">
        <p class="text-sm text-gray-600">Đơn hàng hôm nay</p>
        <p class="text-2xl font-bold text-gray-900">@Model.NewOrdersToday</p>
    </a>
    <a asp-controller="Users" asp-action="Index" class="bg-white p-6 rounded-lg shadow-sm block hover:bg-gray-50 transition-colors">
        <p class="text-sm text-gray-600">Tổng số khách hàng</p>
        <p class="text-2xl font-bold text-gray-900">@Model.TotalUsers</p>
    </a>
</div>

<!-- Biểu đồ và Sản phẩm bán chạy (giữ nguyên cấu trúc) -->
<div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
    <div class="lg:col-span-2 bg-white p-6 rounded-lg shadow-sm">
        <h3 class="text-lg font-semibold mb-4">Biểu đồ doanh thu</h3>
        <div class="relative h-80">
             <canvas id="revenueChart"></canvas>
        </div>
    </div>
    <div class="bg-white p-6 rounded-lg shadow-sm">
        <h3 class="text-lg font-semibold mb-4">Sản phẩm bán chạy nhất</h3>
        <div class="space-y-4">
            @foreach (var (item, index) in Model.BestSellingItems.Select((v, i) => (v, i)))
            {
                    <div class="flex items-center space-x-3">
                        <div class="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center text-red-600 font-semibold">@(index + 1)</div>
                        <div>
                            <p class="font-medium text-sm">@item.ItemName</p>
                            <p class="text-xs text-gray-600">@item.TotalQuantitySold đã bán</p>
                        </div>
                    </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dailyRevenueData = @Html.Raw(Json.Serialize(Model.DailyRevenue));

            if (dailyRevenueData.length > 0) {
                const labels = dailyRevenueData.map(d => d.date);
                const data = dailyRevenueData.map(d => d.revenue);

                const ctx = document.getElementById('revenueChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line', // Đổi thành biểu đồ đường cho đẹp hơn
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Doanh thu (VND)',
                            data: data,
                            backgroundColor: 'rgba(239, 68, 68, 0.1)',
                            borderColor: 'rgba(220, 38, 38, 1)',
                            borderWidth: 2,
                            fill: true,
                            tension: 0.4 // Làm mượt đường cong
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: { callback: value => new Intl.NumberFormat('vi-VN').format(value) + 'đ' }
                            },
                            x: {
                                type: 'time', // Sử dụng trục thời gian
                                time: {
                                    unit: 'day',
                                    tooltipFormat: 'dd/MM/yyyy',
                                    displayFormats: { day: 'dd/MM' }
                                },
                                grid: { display: false }
                            }
                        },
                        plugins: {
                            legend: { display: false },
                            tooltip: { callbacks: { label: context => new Intl.NumberFormat('vi-VN', { style: 'currency', currency: 'VND' }).format(context.parsed.y) } }
                        }
                    }
                });
            }
        });
    </script>
}
