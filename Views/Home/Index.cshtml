@model FastFoodApp.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Trang chủ";
}
@Html.AntiForgeryToken()

<!-- ===== HERO SECTION ===== -->
<section class="relative hero-gradient text-white overflow-hidden min-h-screen flex items-center">
    <!-- Animated Background -->
    <div class="absolute inset-0 opacity-10">
        <div class="absolute top-10 left-10 text-6xl animate-bounce-slow">🍔</div>
        <div class="absolute top-32 right-20 text-4xl animate-bounce-slow" style="animation-delay: 0.5s;">🍟</div>
        <div class="absolute bottom-20 left-20 text-5xl animate-bounce-slow" style="animation-delay: 1s;">🥤</div>
        <div class="absolute bottom-32 right-10 text-4xl animate-bounce-slow" style="animation-delay: 1.5s;">🍗</div>
        <div class="absolute top-1/2 left-1/4 text-3xl animate-bounce-slow" style="animation-delay: 2s;">🌮</div>
        <div class="absolute top-3/4 right-1/3 text-3xl animate-bounce-slow" style="animation-delay: 2.5s;">🍕</div>
    </div>
    
    <!-- Floating shapes -->
    <div class="absolute inset-0 overflow-hidden">
        <div class="absolute -top-40 -right-40 w-80 h-80 bg-yellow-400/20 rounded-full blur-3xl"></div>
        <div class="absolute -bottom-40 -left-40 w-80 h-80 bg-orange-400/20 rounded-full blur-3xl"></div>
        <div class="absolute top-1/3 left-1/3 w-60 h-60 bg-red-400/10 rounded-full blur-2xl"></div>
    </div>
    
    <div class="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 lg:py-32">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <!-- Left Content -->
            <div class="text-center lg:text-left animate-fade-in">
                <div class="inline-flex items-center px-6 py-3 bg-white/20 rounded-full backdrop-blur-sm border border-white/30 mb-8">
                    <span class="text-yellow-200 font-semibold text-lg">🔥 Khuyến mãi đặc biệt hôm nay!</span>
                </div>
                <h1 class="text-5xl sm:text-6xl lg:text-8xl font-bold mb-8 leading-tight">
                    <span class="block">Thức Ăn</span>
                    <span class="block bg-gradient-to-r from-yellow-300 via-yellow-400 to-orange-300 bg-clip-text text-transparent">
                        Siêu Ngon!
                    </span>
                </h1>
                <p class="text-xl lg:text-2xl mb-10 opacity-90 max-w-lg mx-auto lg:mx-0 leading-relaxed">
                    Đặt món dễ dàng, giao hàng nhanh chóng 24/7. Thưởng thức hương vị tuyệt hảo ngay tại nhà bạn!
                </p>
                <div class="flex flex-col sm:flex-row gap-6 justify-center lg:justify-start mb-12">
                    <a asp-controller="Product" asp-action="Index" class="group bg-white text-brand-600 px-10 py-5 rounded-full font-bold text-xl flex items-center justify-center space-x-3 hover:bg-yellow-50 transition-all duration-300 transform hover:scale-105 shadow-2xl hover:shadow-3xl">
                        <span>Đặt ngay</span>
                        <i data-lucide="arrow-right" class="h-6 w-6 group-hover:translate-x-2 transition-transform duration-300"></i>
                    </a>
                    <a asp-controller="Product" asp-action="Index" asp-route-categoryId="combo" class="group border-3 border-white text-white px-10 py-5 rounded-full font-bold text-xl hover:bg-white hover:text-brand-600 transition-all duration-300 transform hover:scale-105 shadow-2xl hover:shadow-3xl flex items-center justify-center space-x-3">
                        <i data-lucide="star" class="h-6 w-6 group-hover:rotate-12 transition-transform duration-300"></i>
                        <span>Xem Combo</span>
                    </a>
                </div>
                
                <!-- Enhanced Stats -->
                <div class="grid grid-cols-3 gap-8 max-w-lg mx-auto lg:mx-0">
                    <div class="text-center group">
                        <div class="text-4xl font-bold text-yellow-300 mb-2 group-hover:scale-110 transition-transform duration-300">50K+</div>
                        <div class="text-sm opacity-80">Đơn hàng thành công</div>
                    </div>
                    <div class="text-center group">
                        <div class="text-4xl font-bold text-yellow-300 mb-2 group-hover:scale-110 transition-transform duration-300">4.9</div>
                        <div class="text-sm opacity-80">⭐ Đánh giá trung bình</div>
                    </div>
                    <div class="text-center group">
                        <div class="text-4xl font-bold text-yellow-300 mb-2 group-hover:scale-110 transition-transform duration-300">24/7</div>
                        <div class="text-sm opacity-80">Phục vụ không ngừng</div>
                    </div>
                </div>
            </div>
            
            <!-- Right Image with enhanced design -->
            <div class="relative animate-slide-up">
                <div class="relative z-10">
                    <!-- Main image -->
                    <div class="relative mx-auto w-96 h-96">
                        <img src="https://images.pexels.com/photos/1639557/pexels-photo-1639557.jpeg" 
                             alt="Delicious Burger" 
                             class="w-full h-full object-cover rounded-full shadow-2xl border-8 border-white/20 transform hover:scale-105 transition-transform duration-500"
                             onerror="this.onerror=null;this.src='https://placehold.co/384x384/FFFFFF/333333?text=Burger'">
                        
                        <!-- Glowing ring effect -->
                        <div class="absolute inset-0 rounded-full border-4 border-yellow-300/50 animate-pulse"></div>
                    </div>
                </div>
                
                <!-- Enhanced Floating Elements -->
                <div class="absolute -top-6 -right-6 w-24 h-24 bg-gradient-to-br from-yellow-400 to-orange-400 rounded-full flex items-center justify-center text-3xl animate-bounce-slow shadow-2xl">
                    🏆
                </div>
                <div class="absolute -bottom-6 -left-6 w-20 h-20 bg-gradient-to-br from-green-400 to-emerald-400 rounded-full flex items-center justify-center text-2xl animate-bounce-slow shadow-2xl" style="animation-delay: 0.5s;">
                    ⚡
                </div>
                <div class="absolute top-10 -left-8 w-16 h-16 bg-gradient-to-br from-pink-400 to-red-400 rounded-full flex items-center justify-center text-xl animate-bounce-slow shadow-2xl" style="animation-delay: 1s;">
                    💯
                </div>
                <div class="absolute bottom-20 -right-4 w-18 h-18 bg-gradient-to-br from-blue-400 to-indigo-400 rounded-full flex items-center justify-center text-xl animate-bounce-slow shadow-2xl" style="animation-delay: 1.5s;">
                    🎯
                </div>
            </div>
        </div>
    </div>
    
    <!-- Scroll Indicator -->
    <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
        <div class="flex flex-col items-center text-white/80">
            <span class="text-sm mb-2">Cuộn xuống để khám phá</span>
            <i data-lucide="chevron-down" class="h-8 w-8"></i>
        </div>
    </div>
</section>

<!-- ===== FEATURED PRODUCTS SECTION ===== -->
<section class="py-24 bg-gradient-to-b from-gray-50 via-white to-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-12">
            <div class="inline-flex items-center px-4 py-2 bg-gradient-to-r from-brand-50 to-orange-50 rounded-full border border-brand-100 mb-4">
                <i data-lucide="utensils" class="h-4 w-4 text-brand-600 mr-2"></i>
                <span class="text-brand-600 font-semibold text-sm">Món ăn được yêu thích nhất</span>
            </div>
            <h2 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                Thực Đơn
                <span class="bg-gradient-to-r from-brand-600 via-orange-500 to-yellow-500 bg-clip-text text-transparent">Bán Chạy Nhất</span>
            </h2>
            <p class="text-base text-gray-600 max-w-2xl mx-auto leading-relaxed">
                Khám phá những món ăn được khách hàng yêu thích nhất tại SnapBite - từ burger ngon tuyệt đến combo hấp dẫn
            </p>
        </div>

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
            @foreach (var item in Model.MonAns)
            {
                <div class="product-card bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 flex flex-col border border-gray-100 relative transform hover:-translate-y-1">
                    
                    <!-- Trending Badge -->
                    <div class="absolute top-3 left-3 z-10">
                        <span class="bg-gradient-to-r from-red-500 to-orange-500 text-white text-xs font-bold px-3 py-1 rounded-full shadow-lg flex items-center">
                            <span class="mr-1">🔥</span> Trending
                        </span>
                    </div>

                    <!-- Product Image -->
                    <div class="relative h-56 overflow-hidden">
                    @{
                        var imageSrc = "/images/placeholder-food.jpg";
                        if (item.HinhAnh != null && item.HinhAnh.Length > 0)
                        {
                            var base64 = Convert.ToBase64String(item.HinhAnh);
                            imageSrc = $"data:image/png;base64,{base64}";
                        }
                    }
                        <img src="@imageSrc" alt="@item.TenMonAn" class="product-img w-full h-full object-cover transform group-hover:scale-105 transition-transform duration-500" />
                        
                        <!-- Gradient Overlay -->
                        <div class="absolute inset-0 bg-gradient-to-t from-black/40 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        
                        <!-- Favorite Button -->
                        <button class="absolute top-3 right-3 w-9 h-9 bg-white/90 rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 hover:bg-brand-600 hover:text-white transform hover:scale-105 shadow-md">
                            <i data-lucide="heart" class="h-4 w-4"></i>
                        </button>
                        
                        <!-- Quick View Button -->
                        <div class="absolute bottom-4 left-1/2 transform -translate-x-1/2 opacity-0 group-hover:opacity-100 transition-all duration-300 translate-y-2 group-hover:translate-y-0">
                            <a asp-controller="Product" asp-action="Details" asp-route-id="@item.MaMonAn" class="bg-white text-brand-600 px-4 py-2 rounded-full font-medium hover:bg-brand-600 hover:text-white transition-all duration-200 shadow-md text-sm">
                                Xem chi tiết
                            </a>
                        </div>
                    </div>

                    <!-- Product Info -->
                    <div class="p-4 flex flex-col flex-grow">
                        <div class="flex items-center justify-between mb-2">
                            <span class="text-xs text-brand-600 font-medium bg-brand-50 px-3 py-1 rounded-full border border-brand-100">
                                @item.LoaiMonAn?.TenLoai
                            </span>
                            <div class="flex items-center space-x-0.5">
                                <div class="flex">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <i data-lucide="star" class="h-3 w-3 @(i <= 4 ? "fill-yellow-400 text-yellow-400" : "text-gray-300")"></i>
                                    }
                                </div>
                                <span class="text-xs text-gray-600 ml-1 font-medium">4.8</span>
                            </div>
                        </div>
                        <h3 class="text-base font-bold text-gray-900 mb-1 group-hover:text-brand-600 transition-colors duration-300 leading-tight line-clamp-1">
                            @item.TenMonAn
                        </h3>
                        <p class="text-gray-600 text-xs mb-3 line-clamp-2 flex-grow leading-relaxed">
                            @item.MoTa
                        </p>
                        <div class="flex items-center justify-between mt-auto">
                            <div class="flex items-center space-x-2">
                                <span class="text-lg font-bold bg-gradient-to-r from-brand-600 to-orange-500 bg-clip-text text-transparent">@item.Gia.ToString("N0")đ</span>
                                @if (item.OriginalPrice.HasValue)
                                {
                                    <span class="text-xs text-gray-400 line-through">@item.OriginalPrice.Value.ToString("N0")đ</span>
                                }
                            </div>
                            <div class="add-to-cart-container">
                                <input type="hidden" class="product-id" value="@item.MaMonAn" />
                                <button type="button" class="add-to-cart-btn bg-gradient-to-r from-brand-600 to-orange-500 text-white px-3 py-2 rounded-lg font-medium hover:from-brand-700 hover:to-orange-600 transition-all duration-200 transform hover:scale-105 shadow-md flex items-center space-x-1 text-sm">
                                    <i data-lucide="plus" class="h-4 w-4 group-hover:rotate-90 transition-transform duration-200"></i>
                                    <span>Thêm</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="text-center mt-10">
            <a asp-controller="Product" asp-action="Index" class="inline-flex items-center bg-gradient-to-r from-brand-600 via-orange-500 to-yellow-500 text-white px-6 py-3 rounded-full font-semibold text-base hover:from-brand-700 hover:to-yellow-600 transition-all duration-200 transform hover:scale-105 shadow-lg hover:shadow-xl space-x-2 group">
                <span>Xem Tất Cả Món Ăn</span>
                <i data-lucide="arrow-right" class="h-5 w-5 group-hover:translate-x-1 transition-transform duration-200"></i>
            </a>
        </div>
    </div>
</section>

<!-- ===== ONLINE ORDERING CTA SECTION ===== -->
<section class="py-24 bg-gradient-to-br from-brand-600 via-orange-500 to-yellow-500 relative overflow-hidden">
    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-10">
        <svg class="w-full h-full" viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
            <defs>
                <pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse">
                    <path d="M 10 0 L 0 0 0 10" fill="none" stroke="white" stroke-width="0.5"/>
                </pattern>
            </defs>
            <rect width="100" height="100" fill="url(#grid)" />
        </svg>
    </div>

    <!-- Floating Elements -->
    <div class="absolute top-20 left-20 w-32 h-32 bg-white/10 rounded-full blur-xl animate-pulse"></div>
    <div class="absolute bottom-20 right-20 w-48 h-48 bg-white/5 rounded-full blur-2xl animate-pulse delay-1000"></div>
    <div class="absolute top-1/2 left-1/4 w-24 h-24 bg-white/20 rounded-full blur-lg animate-bounce"></div>

    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
        <div class="text-center">
            <div class="inline-flex items-center px-6 py-3 bg-white/20 backdrop-blur-sm rounded-full border border-white/30 mb-8">
                <i data-lucide="smartphone" class="h-6 w-6 text-white mr-3"></i>
                <span class="text-white font-semibold text-lg">Gọi món trực tuyến</span>
            </div>
            
            <h2 class="text-5xl md:text-7xl font-bold text-white mb-8 leading-tight">
                Đặt Món Ngay
                <br class="hidden md:block">
                <span class="bg-gradient-to-r from-white to-yellow-200 bg-clip-text text-transparent">Tại Nhà!</span>
            </h2>
            
            <p class="text-xl md:text-2xl text-white/90 max-w-4xl mx-auto leading-relaxed mb-12">
                Thưởng thức những món ăn ngon nhất từ SnapBite với dịch vụ giao hàng nhanh chóng và tiện lợi
            </p>

            <div class="flex flex-col sm:flex-row gap-6 justify-center items-center mb-16">
                <a asp-controller="Product" asp-action="Index" class="inline-flex items-center bg-white text-brand-600 px-10 py-5 rounded-full font-bold text-xl hover:bg-gray-100 transition-all duration-300 transform hover:scale-105 shadow-2xl hover:shadow-3xl space-x-4 group">
                    <i data-lucide="shopping-bag" class="h-6 w-6 group-hover:scale-110 transition-transform duration-300"></i>
                    <span>Đặt Món Ngay</span>
                </a>
                
                <a href="#" class="inline-flex items-center bg-transparent border-2 border-white text-white px-10 py-5 rounded-full font-bold text-xl hover:bg-white hover:text-brand-600 transition-all duration-300 transform hover:scale-105 space-x-4 group">
                    <i data-lucide="phone" class="h-6 w-6 group-hover:scale-110 transition-transform duration-300"></i>
                    <span>Hotline: 1900-xxxx</span>
                </a>
            </div>

            <!-- Features Grid -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div class="bg-white/10 backdrop-blur-sm rounded-3xl p-8 border border-white/20 hover:bg-white/20 transition-all duration-300 group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                        <i data-lucide="truck" class="h-8 w-8 text-white"></i>
                    </div>
                    <h3 class="text-2xl font-bold text-white mb-4">Giao Hàng Nhanh</h3>
                    <p class="text-white/90 leading-relaxed">Giao hàng trong vòng 30 phút với đội ngũ shipper chuyên nghiệp</p>
                </div>

                <div class="bg-white/10 backdrop-blur-sm rounded-3xl p-8 border border-white/20 hover:bg-white/20 transition-all duration-300 group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                        <i data-lucide="shield-check" class="h-8 w-8 text-white"></i>
                    </div>
                    <h3 class="text-2xl font-bold text-white mb-4">An Toàn Vệ Sinh</h3>
                    <p class="text-white/90 leading-relaxed">Cam kết chất lượng và an toàn thực phẩm theo tiêu chuẩn quốc tế</p>
                </div>

                <div class="bg-white/10 backdrop-blur-sm rounded-3xl p-8 border border-white/20 hover:bg-white/20 transition-all duration-300 group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300">
                        <i data-lucide="star" class="h-8 w-8 text-white"></i>
                    </div>
                    <h3 class="text-2xl font-bold text-white mb-4">Chất Lượng Đỉnh Cao</h3>
                    <p class="text-white/90 leading-relaxed">Nguyên liệu tươi ngon, được chế biến bởi đầu bếp chuyên nghiệp</p>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Tất cả icons được xử lý tự động từ _Layout.cshtml -->
<style>
    .product-card {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.5s ease, transform 0.5s ease;
    }
    .product-card.show {
        opacity: 1;
        transform: translateY(0);
    }
    
    .toast-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 12px 20px;
        background-color: #10b981;
        color: white;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        z-index: 1000;
        opacity: 0;
        transform: translateY(-20px);
        transition: all 0.3s ease;
    }
    
    .toast-notification.show {
        opacity: 1;
        transform: translateY(0);
    }
    
    .cart-count-badge {
        position: absolute;
        top: -8px;
        right: -8px;
        background-color: #ef4444;
        color: white;
        border-radius: 50%;
        width: 20px;
        height: 20px;
        font-size: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<div id="toast-notification" class="toast-notification" style="display:none;">
    <span id="toast-message">Sản phẩm đã được thêm vào giỏ hàng!</span>
</div>
@section Scripts {
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Khởi tạo icons
        if (typeof lucide !== 'undefined' && lucide && lucide.createIcons) {
            setTimeout(function() {
                lucide.createIcons();
            }, 100);
        }
        
        // Hiển thị sản phẩm với hiệu ứng fade-in tuần tự
        const productCards = document.querySelectorAll('.product-card');
        productCards.forEach((card, index) => {
            setTimeout(() => {
                card.classList.add('show');
            }, 100 + (index * 100)); // Hiển thị mỗi sản phẩm cách nhau 100ms
        });
        
        // Xử lý nút test
        document.getElementById('test-cart-button')?.addEventListener('click', function() {
            console.log('Test button clicked');
            
            // Chuyển hướng trực tiếp đến Cart/QuickAdd với redirectToCart=true
            window.location.href = '/Cart/QuickAdd?id=1&quantity=1&isCombo=false&redirectToCart=true';
        });
        
        // Xử lý thêm vào giỏ hàng bằng AJAX
        document.querySelectorAll('.add-to-cart-btn').forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                
                const productId = this.closest('.add-to-cart-container').querySelector('.product-id').value;
                console.log('Adding product to cart, ID:', productId);
                
                // Sử dụng phương thức GET đơn giản
                const url = '/Cart/QuickAdd' + 
                            '?id=' + encodeURIComponent(productId) + 
                            '&quantity=1' + 
                            '&isCombo=false';
                
                console.log('Request URL:', url);
                
                // Thực hiện gọi AJAX đơn giản với GET
                fetch(url, {
                    method: 'GET',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    console.log('Response status:', response.status);
                    if (!response.ok) {
                        throw new Error('Lỗi HTTP: ' + response.status);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Success data:', data);
                    if (data.success) {
                        showToast(data.message);
                        updateCartCount(data.cartCount);
                    } else {
                        showToast(data.message || 'Đã xảy ra lỗi!', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('Đã xảy ra lỗi: ' + error.message, 'error');
                });
            });
        });
    });
    
    function showToast(message, type = 'success') {
        const toast = document.getElementById('toast-notification');
        const toastMessage = document.getElementById('toast-message');
        
        toast.style.backgroundColor = type === 'success' ? '#10b981' : '#ef4444';
        toastMessage.innerText = message;
        
        toast.style.display = 'block';
        setTimeout(() => {
            toast.classList.add('show');
        }, 10);
        
        setTimeout(() => {
            toast.classList.remove('show');
            setTimeout(() => {
                toast.style.display = 'none';
            }, 300);
        }, 3000);
    }
    
    function updateCartCount(count) {
        const cartCountElement = document.getElementById('cart-count');
        if (!cartCountElement) return;
        
        if (count !== undefined) {
            // Nếu count được truyền vào, sử dụng nó
            cartCountElement.textContent = count;
            cartCountElement.classList.remove('hidden');
        } else {
            // Nếu không, gọi API để lấy số lượng hiện tại
            fetch('@Url.Action("GetCartCount", "Cart")')
                .then(response => response.json())
                .then(data => {
                    if (data.count > 0) {
                        cartCountElement.textContent = data.count;
                        cartCountElement.classList.remove('hidden');
                    } else {
                        cartCountElement.classList.add('hidden');
                    }
                })
                .catch(err => console.error('Error fetching cart count:', err));
        }
    }
</script>
}