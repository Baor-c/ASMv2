@model FastFoodApp.ViewModels.CheckoutViewModel
@{
    ViewData["Title"] = "Thanh toán";
    var defaultAddress = Model.Addresses.FirstOrDefault(a => a.MaDiaChi == Model.SelectedAddressId);
}

<div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center mb-10">
            <h1 class="text-3xl font-bold text-gray-900">Xác nhận đơn hàng</h1>
            <p class="text-gray-600 mt-2">Vui lòng kiểm tra lại thông tin trước khi hoàn tất đặt hàng.</p>
        </div>

        <form asp-controller="Checkout" asp-action="Index" method="post">
            @Html.AntiForgeryToken()
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">

                <!-- Left Column: Shipping & Payment -->
                <div class="lg:col-span-2 space-y-8">
                    <!-- Shipping Information -->
                    <div class="bg-white rounded-xl shadow-lg p-6">
                        <div class="flex justify-between items-center mb-4">
                             <h3 class="text-xl font-bold text-gray-900 flex items-center">
                                <i data-lucide="map-pin" class="w-6 h-6 mr-3 text-red-600"></i>
                                Địa Chỉ Nhận Hàng
                            </h3>
                            <button type="button" id="change-address-btn" class="text-red-600 font-semibold hover:underline">Thay Đổi</button>
                        </div>

                        @if (defaultAddress != null)
                        {
                                <div id="selected-address-display">
                                    <p class="font-bold">@defaultAddress.TenNguoiNhan - @defaultAddress.SoDienThoai</p>
                                    <p class="text-gray-600">@defaultAddress.DiaChiCuThe</p>
                                </div>
                        }
                        <input type="hidden" asp-for="SelectedAddressId" id="selected-address-id-input" />
                        <span asp-validation-for="SelectedAddressId" class="text-red-500 text-sm"></span>
                    </div>

                    <!-- Payment Method -->
                    <div class="bg-white rounded-xl shadow-lg p-6">
                        <h3 class="text-xl font-bold text-gray-900 mb-6">Phương thức thanh toán</h3>
                        <div class="space-y-3">
                            <label class="flex items-center p-4 border border-gray-300 rounded-lg cursor-pointer has-[:checked]:bg-red-50 has-[:checked]:border-red-500">
                                <input type="radio" name="paymentMethod" value="cash" class="h-4 w-4 text-red-600 focus:ring-red-500" checked />
                                <span class="ml-4 font-medium">Thanh toán khi nhận hàng (COD)</span>
                            </label>
                        </div>
                    </div>
                </div>

                <!-- Right Column: Order Summary -->
                <aside class="lg:col-span-1">
                    <div class="bg-white rounded-xl shadow-lg p-6 sticky top-8">
                        <h3 class="text-xl font-bold text-gray-900 mb-6 text-center">Tóm tắt đơn hàng</h3>
                        <div class="space-y-4 max-h-64 overflow-y-auto pr-2">
                            @foreach (var item in Model.CartItems)
                            {
                                    <div class="flex items-center space-x-4">
                                        <div class="w-16 h-16 rounded-lg overflow-hidden relative">
                                            <img src="data:image/png;base64,@item.HinhAnh" alt="@item.TenSanPham" class="w-full h-full object-cover">
                                            <span class="absolute -top-2 -right-2 bg-gray-800 text-white text-xs w-6 h-6 flex items-center justify-center rounded-full">@item.SoLuong</span>
                                        </div>
                                        <div class="flex-1">
                                            <p class="font-semibold text-gray-800 text-sm">@item.TenSanPham</p>
                                        </div>
                                        <p class="font-medium text-gray-700 text-sm">@item.ThanhTien.ToString("N0")đ</p>
                                    </div>
                            }
                        </div>
                        <div class="border-t my-6"></div>
                        <div class="space-y-3 text-sm">
                            <div class="flex justify-between">
                                <span class="text-gray-600">Tạm tính</span>
                                <span class="font-medium">@Model.TongTienGoc.ToString("N0")đ</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Giảm giá (@Model.PhanTramGiamGia%)</span>
                                <span class="font-medium text-green-600">-@Model.SoTienGiam.ToString("N0")đ</span>
                            </div>
                        </div>
                        <div class="border-t my-6"></div>
                        <div class="flex justify-between items-center">
                            <span class="text-lg font-bold text-gray-900">Tổng cộng</span>
                            <span class="text-2xl font-bold text-red-600">@Model.TongTienThanhToan.ToString("N0")đ</span>
                        </div>
                        <div class="mt-8">
                            <button type="submit" class="w-full bg-red-600 text-white py-3 rounded-lg font-semibold hover:bg-red-700 transition-colors">Xác nhận và Đặt hàng</button>
                        </div>
                    </div>
                </aside>
            </div>
        </form>
    </div>
</div>

<!-- Partial View cho Popup chọn địa chỉ -->
<div id="address-popup-overlay" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[100] p-4 hidden">
    <div id="address-popup" class="bg-white rounded-lg max-w-md w-full transform scale-95 opacity-0 transition-all duration-300">
        <div class="flex items-center justify-between p-4 border-b">
            <h2 class="text-lg font-semibold text-gray-900">Địa Chỉ Của Tôi</h2>
            <button id="close-address-popup" class="p-1 hover:bg-gray-100 rounded-full transition-colors"><i data-lucide="x" class="h-5 w-5"></i></button>
        </div>
        <div class="p-4 space-y-4 max-h-[60vh] overflow-y-auto">
            @foreach (var address in Model.Addresses)
            {
                    <label class="flex items-start p-4 border rounded-lg cursor-pointer has-[:checked]:bg-red-50 has-[:checked]:border-red-500">
                        <input type="radio" name="address-option" value="@address.MaDiaChi" data-display-html="<p class='font-bold'>@address.TenNguoiNhan - @address.SoDienThoai</p><p class='text-gray-600'>@address.DiaChiCuThe</p>" class="h-5 w-5 text-red-600 mt-1" @(Model.SelectedAddressId == address.MaDiaChi ? "checked" : "") />
                        <div class="ml-4">
                            <p class="font-semibold">@address.TenNguoiNhan (@address.SoDienThoai)</p>
                            <p class="text-sm text-gray-600">@address.DiaChiCuThe</p>
                        </div>
                    </label>
            }
        </div>
        <div class="p-4 bg-gray-50 border-t flex justify-end space-x-2">
            <button id="cancel-address-change" type="button" class="px-4 py-2 border rounded-lg hover:bg-gray-200">Hủy</button>
            <button id="confirm-address-change" type="button" class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700">Xác nhận</button>
        </div>
    </div>
</div>


@section Scripts {
        <script>
            lucide.createIcons();

            document.addEventListener('DOMContentLoaded', function() {
                const changeAddressBtn = document.getElementById('change-address-btn');
                const addressPopupOverlay = document.getElementById('address-popup-overlay');
                const addressPopup = document.getElementById('address-popup');
                const closePopupBtn = document.getElementById('close-address-popup');
                const cancelBtn = document.getElementById('cancel-address-change');
                const confirmBtn = document.getElementById('confirm-address-change');
                const selectedAddressDisplay = document.getElementById('selected-address-display');
                const selectedAddressIdInput = document.getElementById('selected-address-id-input');

                function openPopup() {
                    addressPopupOverlay.classList.remove('hidden');
                    setTimeout(() => addressPopup.classList.remove('scale-95', 'opacity-0'), 10);
                }

                function closePopup() {
                    addressPopup.classList.add('scale-95', 'opacity-0');
                    setTimeout(() => addressPopupOverlay.classList.add('hidden'), 300);
                }

                changeAddressBtn.addEventListener('click', openPopup);
                closePopupBtn.addEventListener('click', closePopup);
                cancelBtn.addEventListener('click', closePopup);
                addressPopupOverlay.addEventListener('click', (e) => {
                    if(e.target === addressPopupOverlay) closePopup();
                });

                confirmBtn.addEventListener('click', () => {
                    const selectedRadio = document.querySelector('input[name="address-option"]:checked');
                    if (selectedRadio) {
                        selectedAddressIdInput.value = selectedRadio.value;
                        selectedAddressDisplay.innerHTML = selectedRadio.dataset.displayHtml;
                    }
                    closePopup();
                });
            });
        </script>
}
