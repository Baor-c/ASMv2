@model FastFoodApp.ViewModels.CheckoutViewModel
@{
    ViewData["Title"] = "Xác nhận đơn hàng";
    string FormatPrice(decimal price) => price.ToString("N0") + "đ";
}

<!-- Vùng chứa Popup sẽ được load vào đây -->
<div id="modal-container"></div>

<div class="min-h-screen bg-gray-50">
    <div class="max-w-6xl mx-auto py-8 px-4 sm:px-6 lg:px-8">
        <div class="text-center mb-8 animate-fade-in">
            <h1 class="text-3xl sm:text-4xl font-bold text-gray-900">Xác nhận đơn hàng</h1>
            <p class="mt-2 text-lg text-gray-600">Vui lòng kiểm tra lại thông tin trước khi hoàn tất đặt hàng.</p>
        </div>

        <form asp-action="Index" method="post">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="All" class="text-red-500 mb-4"></div>
            <div class="grid grid-cols-1 lg:grid-cols-5 gap-8">
                <!-- Cột trái: Chi tiết -->
                <div class="lg:col-span-3 space-y-8">
                    <!-- Thẻ địa chỉ -->
                    <div class="bg-white rounded-xl shadow-lg p-6 animate-slide-up">
                        <div class="flex justify-between items-center mb-4">
                            <h2 class="text-xl font-bold text-gray-800 flex items-center">
                                <i data-lucide="map-pin" class="h-6 w-6 mr-3 text-red-500"></i>
                                Địa Chỉ Nhận Hàng
                            </h2>
                            <button type="button" id="change-address-btn" class="font-semibold text-red-600 hover:text-red-800 text-sm">
                                Thay Đổi
                            </button>
                        </div>

                        <div id="selected-address-display" class="border-l-4 border-red-500 pl-4 py-2">
                            @if (Model.Addresses.Any())
                            {
                                var defaultAddress = Model.Addresses.FirstOrDefault(a => a.MaDiaChi == Model.SelectedAddressId) ?? Model.Addresses.First();
                                    <p class="font-bold">@defaultAddress.TenNguoiNhan - @defaultAddress.SoDienThoai</p>
                                    <p class="text-gray-600 text-sm">@defaultAddress.DiaChiCuThe</p>
                                    <input type="hidden" asp-for="SelectedAddressId" id="hiddenSelectedAddressId" value="@defaultAddress.MaDiaChi" />
                            }
                            else
                            {
                                    <p class="text-red-500">Vui lòng thêm địa chỉ trong trang cá nhân.</p>
                            }
                        </div>
                        <span asp-validation-for="SelectedAddressId" class="text-red-500 text-sm mt-2"></span>
                    </div>

                    <!-- Thẻ phương thức thanh toán -->
                    <div class="bg-white rounded-xl shadow-lg p-6 animate-slide-up" style="animation-delay: 100ms;">
                        <h2 class="text-xl font-bold text-gray-800 flex items-center mb-4">
                            <i data-lucide="credit-card" class="h-6 w-6 mr-3 text-red-500"></i>
                            Phương thức thanh toán
                        </h2>
                        <div class="space-y-4">
                            <div class="border border-gray-300 rounded-lg p-4 has-[:checked]:border-red-500 has-[:checked]:ring-2 has-[:checked]:ring-red-200">
                                <label class="flex items-center cursor-pointer">
                                    <input type="radio" id="payment_cod" asp-for="PaymentMethod" value="COD" checked class="h-4 w-4 text-red-600 border-gray-300 focus:ring-red-500" />
                                    <span class="ml-3 font-semibold text-gray-700">Thanh toán khi nhận hàng (COD)</span>
                                </label>
                            </div>
                            <div class="border border-gray-300 rounded-lg p-4 has-[:checked]:border-red-500 has-[:checked]:ring-2 has-[:checked]:ring-red-200">
                                <label class="flex items-center cursor-pointer">
                                    <input type="radio" id="payment_vnpay" asp-for="PaymentMethod" value="VNPAY" class="h-4 w-4 text-red-600 border-gray-300 focus:ring-red-500" />
                                    <span class="ml-3 font-semibold text-gray-700">Thanh toán bằng mã QR</span>
                                </label>
                                <div id="vnpay-qr-container" class="hidden mt-4 text-center">
                                    <img src="~/images/vnpay_qr.png" alt="VNPAY QR Code" class="mx-auto w-48 h-48" />
                                    <p class="text-sm text-gray-600 mt-2">Quét mã để thanh toán. Nội dung: Tên + SĐT</p>
                                </div>
                            </div>
                        </div>
                        <span asp-validation-for="PaymentMethod" class="text-red-500 text-sm mt-2"></span>
                    </div>
                </div>

                <!-- Cột phải: Tóm tắt đơn hàng -->
                <div class="lg:col-span-2">
                    <div class="bg-white rounded-xl shadow-lg p-6 sticky top-8 animate-slide-up" style="animation-delay: 200ms;">
                        <h2 class="text-xl font-bold text-gray-900 mb-4 border-b pb-3">Tóm tắt đơn hàng</h2>
                        <div class="space-y-4 max-h-80 overflow-y-auto pr-2">
                            @foreach (var item in Model.CartItems)
                            {
                                    <div class="flex items-center space-x-4">
                                        <div class="w-16 h-16 rounded-lg overflow-hidden flex-shrink-0">
                                            <img src="data:image/png;base64,@item.HinhAnh" alt="@item.TenSanPham" class="w-full h-full object-cover">
                                        </div>
                                        <div class="flex-grow">
                                            <p class="font-semibold text-gray-800 line-clamp-1">@item.TenSanPham</p>
                                            <p class="text-sm text-gray-500">SL: @item.SoLuong</p>
                                        </div>
                                        <p class="font-semibold text-gray-900">@FormatPrice(item.ThanhTien)</p>
                                    </div>
                            }
                        </div>
                        <div class="mt-6 pt-4 border-t space-y-2">
                            <div class="flex justify-between text-gray-600">
                                <span>Tạm tính</span>
                                <span>@FormatPrice(Model.TongTienGoc)</span>
                            </div>
                            <div class="flex justify-between text-gray-600">
                                <span>Giảm giá (@Model.PhanTramGiamGia%)</span>
                                <span class="text-green-600 font-semibold">-@FormatPrice(Model.SoTienGiam)</span>
                            </div>
                            <div class="flex justify-between font-bold text-xl text-gray-900 pt-2 border-t mt-2">
                                <span>Tổng cộng</span>
                                <span class="text-red-600">@FormatPrice(Model.TongTienThanhToan)</span>
                            </div>
                        </div>
                        <div class="mt-6">
                            <button type="submit" class="w-full bg-red-600 text-white py-3 rounded-lg text-lg font-semibold hover:bg-red-700 transition-transform transform hover:scale-105">
                                Xác nhận và Đặt hàng
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
        <script>
            document.addEventListener('DOMContentLoaded', function() {
                lucide.createIcons();

                const modalContainer = document.getElementById('modal-container');
                const changeAddressBtn = document.getElementById('change-address-btn');
                const paymentRadios = document.querySelectorAll('input[name="PaymentMethod"]');
                const vnpayContainer = document.getElementById('vnpay-qr-container');

                paymentRadios.forEach(radio => {
                    radio.addEventListener('change', function() {
                        if (this.value === 'VNPAY') {
                            vnpayContainer.classList.remove('hidden');
                        } else {
                            vnpayContainer.classList.add('hidden');
                        }
                    });
                });

                if(changeAddressBtn) {
                    changeAddressBtn.addEventListener('click', async function() {
                        const response = await fetch('@Url.Action("GetAddressSelectionModal", "Checkout")');
                        modalContainer.innerHTML = await response.text();
                        setupModalEventListeners();
                        const overlay = document.getElementById('address-modal-overlay');
                        const modal = document.getElementById('address-modal');
                        overlay.style.display = 'flex'; // Hiển thị overlay
                        setTimeout(() => modal.classList.remove('scale-95', 'opacity-0'), 10);
                    });
                }

                function setupModalEventListeners() {
                    const overlay = document.getElementById('address-modal-overlay');
                    const modal = document.getElementById('address-modal');
                    const form = document.getElementById('address-selection-form');
                    const cancelBtn = document.getElementById('cancel-address-selection');
                    const confirmBtn = form.querySelector('button[type="submit"]');
                    const radios = form.querySelectorAll('input[type="radio"]');

                    function closeModal() {
                        modal.classList.add('scale-95', 'opacity-0');
                        setTimeout(() => {
                            overlay.remove();
                        }, 300);
                    }

                    cancelBtn.addEventListener('click', closeModal);
                    document.getElementById('close-address-modal').addEventListener('click', closeModal);
                    overlay.addEventListener('click', (e) => {
                        if (e.target === overlay) closeModal();
                    });

                    // Kích hoạt nút xác nhận khi có lựa chọn
                    radios.forEach(radio => {
                        radio.addEventListener('change', () => {
                            confirmBtn.disabled = false;
                        });
                    });

                    form.addEventListener('submit', function(e) {
                        e.preventDefault();
                        const selectedRadio = form.querySelector('input[name="selectedAddressIdModal"]:checked');
                        if (selectedRadio) {
                            document.getElementById('hiddenSelectedAddressId').value = selectedRadio.value;

                            const addressDisplayDiv = document.getElementById('selected-address-display');
                            addressDisplayDiv.innerHTML = `
                                <p class="font-bold">${selectedRadio.dataset.name} - ${selectedRadio.dataset.phone}</p>
                                <p class="text-gray-600 text-sm">${selectedRadio.dataset.details}</p>
                                <input type="hidden" name="SelectedAddressId" id="hiddenSelectedAddressId" value="${selectedRadio.value}" />
                            `;

                            toastr.success('Đã cập nhật địa chỉ nhận hàng.');
                        }
                        closeModal();
                    });
                }
            });
        </script>
}